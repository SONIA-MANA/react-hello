{"version":3,"sources":["components/Home.js","components/Staff.js","components/Table.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Home","Component","Staff","Table","props","state","students","id","name","age","email","this","map","student","index","key","renderTableData","Object","keys","toUpperCase","renderTableHeader","Contact","handlefirstnameChange","event","setState","firstname","target","value","handlelastnameChange","lastname","handlecommentsChange","comments","handlecountryChange","Country","handleSubmit","alert","preventDefault","lasttname","bind","onSubmit","type","onChange","App","className","to","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d62b2348.chunk.js","sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable react/prefer-stateless-function */\nimport React, { Component } from 'react';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <h2><u>HELLO</u></h2>\n        <p>\n          Back in the floppy-in-a-box days we tried to ship no more than twice a year or so, as it cost money to ship a new version and often we had to charge the customers at least something for it.\n        </p>\n\n        <p>For Trapeze and Deltagraph back then we never had to ship any “patch disks” or emergency fixes so the only releases were generally major ones. Our releases had to be of quality to stand on their own for at least 6 months. Most of the time we did not even know who any new buyers were unless they told us.</p>\n\n        <p>For the purposes of this post I want to talk mostly about apps, particularly mobile apps since that I what I do today. While shipping these days is easy (even Apple is fairly quick these days) and free, the question of how often is still a valid one.</p>\n\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","/* eslint-disable react/prefer-stateless-function */\nimport React, { Component } from 'react';\n\nclass Staff extends Component {\n  render() {\n    return (\n      <div>\n        <h2><u>STAFFS MEMBERS</u></h2>\n        <p>\n          <b><u>MEMBERS</u></b>\n        </p>\n        <ul>\n          <li>1</li>\n          <li>2</li>\n          <li>3</li>\n          <li>4</li>\n          <li>5</li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Staff;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable max-len */\n/* eslint-disable react/sort-comp */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-dupe-class-members */\nimport React, { Component } from 'react';\n\nclass Table extends Component {\n  constructor(props) {\n    super(props); // since we are extending class Table so we have to use super in order to override Component class constructor\n    this.state = { // state is by default an object\n      students: [\n        {\n          id: 1, name: 'SUSAN', age: 21, email: 'susan@email.com',\n        },\n        {\n          id: 2, name: 'SHARON', age: 19, email: 'sharon@email.com',\n        },\n        {\n          id: 3, name: 'SADIQUE', age: 16, email: 'sadique@email.com',\n        },\n        {\n          id: 4, name: 'JUMA', age: 25, email: 'juma@email.com',\n        },\n      ],\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>STAFFS DETAILS</h1>\n      </div>\n    );\n  }\n\n  renderTableData() {\n    return this.state.students.map((student, index) => {\n      const {\n        id, name, age, email,\n      } = student; // destructuring\n      return (\n        <tr key={id}>\n          <td>{id}</td>\n          <td>{name}</td>\n          <td>{age}</td>\n          <td>{email}</td>\n        </tr>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 id=\"title\"><u>STAFFS DETAILS</u></h1>\n        <table id=\"students\">\n          <tbody>\n            {this.renderTableData()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  renderTableHeader() {\n    const header = Object.keys(this.state.students[0]);\n    return header.map((key, index) => <th key={index}>{key.toUpperCase()}</th>);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 id=\"title\"><u>STAFFS DETAILS</u></h1>\n        <table id=\"students\">\n          <tbody>\n            <tr>{this.renderTableHeader()}</tr>\n            {this.renderTableData()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","/* eslint-disable react/no-unused-state */\n/* eslint-disable no-alert */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { Component } from 'react';\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstname: '',\n      lasttname: '',\n      comments: '',\n      Country: 'Kenya',\n    };\n\n    this.handlefirstnameChange = this.handlefirstnameChange.bind(this);\n    this.handlelastnameChange = this.handlelastnameChange.bind(this);\n    this.handlecommentsChange = this.handlecommentsChange.bind(this);\n    this.handlecountryChange = this.handlecountryChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handlefirstnameChange = (event) => {\n    this.setState({\n      firstname: event.target.value,\n    });\n  }\n\n  handlelastnameChange = (event) => {\n    this.setState({\n      lastname: event.target.value,\n    });\n  }\n\n  handlecommentsChange = (event) => {\n    this.setState({\n      comments: event.target.value,\n    });\n  }\n\n  handlecountryChange = (event) => {\n    this.setState({\n      Country: event.target.value,\n    });\n  }\n\n  handleSubmit = (event) => {\n    alert(\"Details submitted: \");\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <fieldset>\n          <legend><h2><u>personal information:</u></h2></legend>\n          <div>\n            <label><h3>firstname:</h3></label>\n            <input\n              type=\"text\"\n              value={this.state.firstname}\n              onChange={this.handlefirstnameChange}\n            />\n          </div>\n          <div>\n            <label><h3>lastname:</h3></label>\n            <input\n              type=\"text\"\n              value={this.state.lastname}\n              onChange={this.handlelastnameChange}\n            />\n          </div>\n          <div>\n            <label><h3>comments:</h3></label>\n            <textarea\n              value={this.state.comments}\n              onChange={this.handlecommentsChange}\n            />\n          </div>\n          <div>\n            <label><h3>Country:</h3></label>\n            <select value={this.state.Country} onChange={this.handlecountryChange}>\n              <option value=\"Kenya\">Kenya</option>\n              <option value=\"Uganda\">Uganda</option>\n              <option value=\"Tanzania\">Tanzania</option>\n            </select>\n          </div>\n          <button type=\"Submit\">Submit</button>\n        </fieldset>\n      </form>\n    );\n  }\n}\n\n\nexport default Contact;\n","/* eslint-disable import/no-named-as-default-member */\n/* eslint-disable import/no-named-as-default */\n/* eslint-disable import/no-unresolved */\n/* eslint-disable react/prefer-stateless-function */\nimport React, { Component } from 'react';\nimport {\n  Route,\n  NavLink,\n  HashRouter,\n} from 'react-router-dom';\nimport Home from './components/Home';\nimport Staff from './components/Staff';\nimport Table from './components/Table';\nimport Contact from './components/Contact';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div>\n          <h1><u>WELCOME</u></h1>\n          <ul className=\"header\">\n            <li><NavLink to=\"/home\">Home</NavLink></li>\n            <li><NavLink to=\"/staff\">Staff</NavLink></li>\n            <li><NavLink to=\"/Table\">Table</NavLink></li>\n            <li><NavLink to=\"/contact\">Contact</NavLink></li>\n          </ul>\n          <div className=\"content\">\n            <Route path=\"/home\" component={Home} />\n            <Route path=\"/staff\" component={Staff} />\n            <Route path=\"/Table\" component={Table} />\n            <Route path=\"/contact\" component={Contact} />\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}